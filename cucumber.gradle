import net.masterthought.cucumber.ReportBuilder
import net.masterthought.cucumber.Configuration

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.masterthought:cucumber-reporting:3.19.0"
    }
}

task cucumber {
    dependsOn assemble, compileTestGroovy, getGeckoDriver, getChromeDriver, getOperaDriver, getPhantomJsDriver, getIExplorerDriver
    doLast {
        moveDriverFileToFolder()
        List<String> cucumberTags = parseTags()
        single(cucumberTags)
    }
}

void moveDriverFileToFolder(){
    if (((selectedBrowser != '') && !file("drivers/${selectedBrowser}").exists()) && (extractDir != '')) {
        println "Moving the driver file!"
        ant.move file: extractDir, todir: "drivers/"
    }
}

void single(List<String> cucumberTags) {
    lunchCucumberCli(cucumberTags)
    generateReport()
}

void lunchCucumberCli(List<String> cucumberTags) {
    println "Running the tests!!"
    List<String> cucumberArgs = []
    cucumberArgs = ['--plugin', 'pretty', '--plugin', "json:${reporting.baseDir}/${selectedBrowser}.json",
                    '--plugin', "html:${reporting.baseDir}/cucumber-html-report-1", '--glue',
                    'src/cucumber/', 'src/test/groovy/', 'src/test/resources/', 'src/cucumber/features']
    cucumberArgs.addAll(cucumberTags)
    try {
        javaexec {
            systemProperty 'webdriver.gecko.driver', "drivers/geckodriver"
            systemProperty 'webdriver.chrome.driver', "drivers/chromedriver"
            systemProperty 'webdriver.safari.driver', "/usr/bin/safaridriver"
            systemProperty 'webdriver.opera.driver', "drivers/operadriver"
            jvmArgs = ["-Dgeb.env=${selectedBrowser}"]
            main = "cucumber.api.cli.Main"
            classpath = sourceSets.test.runtimeClasspath + sourceSets.main.runtimeClasspath
            args = cucumberArgs
        }
    }
    catch (Exception e) {
    }
}

List<String> parseTags() {
    List<String> result = []
    if (project.hasProperty('tags')) {
        project.tags.replace(' ', '').split('&').each {
            result << '--tags '
            result << it.replace('|', ',')
        }
    } else {
        println "No tags. Running for all!"
    }
    result << '--tags '
    result << '~@ignore'
    return result
}

def generateReport() {
    println "Tests completed. Generating report...."
    File reportOutputDirectory = new File("${reporting.baseDir}/")
    def jsonReports = fileTree(dir: "${reporting.baseDir}/").include '**.json'.toString()
    List<String> jsonReportFiles = new ArrayList<String>()
    jsonReports.each { File file ->
        jsonReportFiles.add("${reporting.baseDir}/${file.name}".toString())
    }
    String title = "Basic Web Automation Report"
    Configuration configuration = new net.masterthought.cucumber.Configuration(reportOutputDirectory, title)
    configuration.setParallelTesting(true)
    configuration.setRunWithJenkins(false)
    configuration.setBuildNumber("1")
    ReportBuilder reportBuilder = new ReportBuilder(jsonReportFiles, configuration)
    reportBuilder.generateReports()
}